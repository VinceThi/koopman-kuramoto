#!/usr/bin/env wolframscript
(* ::Package:: *)

(*** Define the cross-ratio and the symmetry generators ***)

crossRatio = ((zv - zs)(zw - zu))/((zv - zu)(zw - zs));

S1[f_, zx_, wx_, Axs_] := (I(wx - ws)zx + Axs zs - Conjugate[Axs]zx^2/zs)D[f, zx]
S2[f_, zx_, zy_, wx_, wy_, Axs_, Ays_] := (I(wx - ws)zx + Axs zs - Conjugate[Axs]zx^2/zs)D[f, zx] + (I(wy - ws)zy + Ays zs - Conjugate[Ays]zy^2/zs)D[f, zy]

Print["The constants of motion generated by the symmetries are:"]
C1 = FullSimplify[S1[crossRatio, zu, wu, Aus]]
C2 = FullSimplify[S1[crossRatio, zv, wv, Avs]]
C3 = FullSimplify[S1[crossRatio, zw, ww, Aws]]
C4 = FullSimplify[S2[crossRatio, zu, zv, wu, wv, Aus, Avs]]
C5 = FullSimplify[S2[crossRatio, zu, zw, wu, ww, Aus, Aws]]
C6 = FullSimplify[S2[crossRatio, zv, zw, wv, ww, Avs, Aws]]

J1 = D[{crossRatio, C1}, {{zs, zu, zv, zw}}]
J2 = D[{crossRatio, C2}, {{zs, zu, zv, zw}}];
J3 = D[{crossRatio, C3}, {{zs, zu, zv, zw}}];
J4 = D[{crossRatio, C4}, {{zs, zu, zv, zw}}];
J5 = D[{crossRatio, C5}, {{zs, zu, zv, zw}}];
J6 = D[{crossRatio, C6}, {{zs, zu, zv, zw}}];

(* Compute the rank of the Jacobian matrices *)
Print["rank(J1) ="]
MatrixRank[J1]
Print["rank(J2) ="]
MatrixRank[J2]
Print["rank(J3) ="]
MatrixRank[J3]
Print["rank(J4) ="]
MatrixRank[J4]
Print["rank(J5) ="]
MatrixRank[J5]
Print["rank(J6) ="]
MatrixRank[J6]





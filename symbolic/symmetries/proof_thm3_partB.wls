#!/usr/bin/env wolframscript
(* ::Package:: *)

(*** Define the cross-ratio and the symmetry generators ***)

crossRatio = ((zv - zs)(zw - zu))/((zv - zu)(zw - zs));

S1[f_, zx_, wx_, Axs_] := (I(wx - ws)zx + Axs zs - Conjugate[Axs]zx^2/zs)D[f, zx]
S2[f_, zx_, zy_, wx_, wy_, Axs_, Ays_] := (I(wx - ws)zx + Axs zs - Conjugate[Axs]zx^2/zs)D[f, zx] + (I(wy - ws)zy + Ays zs - Conjugate[Ays]zy^2/zs)D[f, zy]

Print["The constants of motion generated by the symmetries are:"]
C1 = FullSimplify[S1[crossRatio, zu, wu, Aus]];
C2 = FullSimplify[S1[crossRatio, zv, wv, Avs]];
C3 = FullSimplify[S1[crossRatio, zw, ww, Aws]];
C4 = FullSimplify[S2[crossRatio, zu, zv, wu, wv, Aus, Avs]];
C5 = FullSimplify[S2[crossRatio, zu, zw, wu, ww, Aus, Aws]];
C6 = FullSimplify[S2[crossRatio, zv, zw, wv, ww, Avs, Aws]];

J1 = D[{crossRatio, C1}, {{zs, zu, zv, zw}}];
J1Eval = J1 /. {
  zs -> 1, 
  zu -> Exp[I Pi/3], 
  zv -> Exp[I Pi/4], 
  zw -> Exp[I Pi/6],
  Aus -> 0.1*Exp[I Pi/6], ws -> 1, wu -> 0.2};

J2 = D[{crossRatio, C2}, {{zs, zu, zv, zw}}];
J2Eval = J2 /. {
  zs -> 1, 
  zu -> Exp[I Pi/3], 
  zv -> Exp[I Pi/4], 
  zw -> Exp[I Pi/6],
  Aus -> 0.1*Exp[I Pi/6], ws -> 1, wv -> 0.2};
  
J3 = D[{crossRatio, C3}, {{zs, zu, zv, zw}}];
J3Eval = J3 /. {
  zs -> 1, 
  zu -> Exp[I Pi/3], 
  zv -> Exp[I Pi/4], 
  zw -> Exp[I Pi/6],
  Aus -> 0.1*Exp[I Pi/6], ws -> 1, ww -> 0.2};

J4 = D[{crossRatio, C4}, {{zs, zu, zv, zw}}];
J4Eval = J4 /. {
  zs -> 1, 
  zu -> Exp[I Pi/3], 
  zv -> Exp[I Pi/4], 
  zw -> Exp[I Pi/6],
  Aus -> 0.1*Exp[I Pi/6], Avs -> -0.2*Exp[-I Pi/4], ws -> 1, wu -> 0.2, wv -> 0.5};
  
J5 = D[{crossRatio, C5}, {{zs, zu, zv, zw}}];
J5Eval = J5 /. {
  zs -> 1, 
  zu -> Exp[I Pi/3], 
  zv -> Exp[I Pi/4], 
  zw -> Exp[I Pi/6],
  Aus -> 0.1*Exp[I Pi/6], Aws -> -0.2*Exp[-I Pi/4], ws -> 1, wu -> 0.2, ww -> 0.5};
  
J6 = D[{crossRatio, C6}, {{zs, zu, zv, zw}}];
J6Eval = J6 /. {
  zs -> 1, 
  zu -> Exp[I Pi/3], 
  zv -> Exp[I Pi/4], 
  zw -> Exp[I Pi/6],
  Avs -> 0.1*Exp[I Pi/6], Aws -> -0.2*Exp[-I Pi/4], ws -> 1, wv -> 0.2, ww -> 0.5};

(* Compute the rank of the Jacobian matrices *)
Print["rank(J1) ="]
MatrixRank[J1]
N[MatrixRank[J1Eval]]

Print["rank(J2) ="]
MatrixRank[J2]
N[MatrixRank[J2Eval]]

Print["rank(J3) ="]
MatrixRank[J3]
N[MatrixRank[J3Eval]]

Print["rank(J4) ="]
MatrixRank[J4]
N[MatrixRank[J4Eval]]

Print["rank(J5) ="]
MatrixRank[J5]
N[MatrixRank[J5Eval]]

Print["rank(J6) ="]
MatrixRank[J6]
N[MatrixRank[J6Eval]]






% ---------------------------- Define symbols -----------------------------
syms z_a z_b z_c z_d z_k
syms wa wb wc wd
syms A_ak A_bk A_ck A_dk
syms A_aa A_bb A_cc A_dd 
syms A_ab A_ac A_ad A_ba A_bc A_bd A_ca A_cb A_cd A_da A_db A_dc

% ----------- Simplify the term related to the operator L_1 ---------------
L1_polynomial = (A_ck*z_c^2-A_ak*z_a^2)*(z_d-z_b)*(z_c-z_b)*(z_d-z_a)...
              + (A_dk*z_d^2-A_bk*z_b^2)*(z_c-z_a)*(z_c-z_b)*(z_d-z_a)...
              - (A_ck*z_c^2-A_bk*z_b^2)*(z_c-z_a)*(z_d-z_b)*(z_d-z_a)...
              - (A_dk*z_d^2-A_ak*z_a^2)*(z_c-z_a)*(z_d-z_b)*(z_c-z_b);
% Treatment:
%%% 1 - collect(expand(L1_polynomial), [z_a, z_b, z_c, z_d])
L1_polynomial_collect = ...
     (A_ak - A_bk)*z_a^2*z_b^2*z_c + (A_bk - A_ak)*z_a^2*z_b^2*z_d ... 
     + (A_ck - A_ak)*z_a^2*z_b*z_c^2 + (A_ak - A_dk)*z_a^2*z_b*z_d^2 ... 
     + (A_ak - A_ck)*z_a^2*z_c^2*z_d + (A_dk - A_ak)*z_a^2*z_c*z_d^2 ...
     + (A_bk - A_ck)*z_a*z_b^2*z_c^2 + (A_dk - A_bk)*z_a*z_b^2*z_d^2 ...
     + (A_ck - A_dk)*z_a*z_c^2*z_d^2 + (A_ck - A_bk)*z_b^2*z_c^2*z_d ... 
     + (A_bk - A_dk)*z_b^2*z_c*z_d^2 + (A_dk - A_ck)*z_b*z_c^2*z_d^2;
 
%%% 2 - Regroup manually the 12 terms with same coefficients (A_xk - A_yk) 
L1_polynomial_simplified = (A_ak - A_bk)*z_a^2*z_b^2*(z_c - z_d) ...
                         + (A_ck - A_ak)*z_a^2*z_c^2*(z_b - z_d) ...
                         + (A_ak - A_dk)*z_a^2*z_d^2*(z_b - z_c) ...
                         + (A_bk - A_ck)*z_b^2*z_c^2*(z_a - z_d) ...
                         + (A_dk - A_bk)*z_b^2*z_d^2*(z_a - z_c) ...
                         + (A_ck - A_dk)*z_c^2*z_d^2*(z_a - z_b);

% ------- Define auxiliary functions to simplify the calculations ---------
f1 = z_k*(z_d - z_b)*(z_c - z_b)*(z_d - z_a)+ (z_d- z_b)*z_a^2*z_c^2/z_k;
f1a = z_a*(z_d - z_b)*(z_c - z_b)*(z_d - z_a)+ (z_d- z_b)*z_a^2*z_c^2/z_a;
f1b = z_b*(z_d - z_b)*(z_c - z_b)*(z_d - z_a)+ (z_d- z_b)*z_a^2*z_c^2/z_b;
f1c = z_c*(z_d - z_b)*(z_c - z_b)*(z_d - z_a)+ (z_d- z_b)*z_a^2*z_c^2/z_c;
f1d = z_d*(z_d - z_b)*(z_c - z_b)*(z_d - z_a)+ (z_d- z_b)*z_a^2*z_c^2/z_d;

f2 = (z_c - z_a)*(z_k*(z_c - z_b)*(z_d - z_a) + z_b^2*z_d^2/z_k);
f2a = (z_c - z_a)*(z_a*(z_c - z_b)*(z_d - z_a) + z_b^2*z_d^2/z_a);
f2b = (z_c - z_a)*(z_b*(z_c - z_b)*(z_d - z_a) + z_b^2*z_d^2/z_b);
f2c = (z_c - z_a)*(z_c*(z_c - z_b)*(z_d - z_a) + z_b^2*z_d^2/z_c);
f2d = (z_c - z_a)*(z_d*(z_c - z_b)*(z_d - z_a) + z_b^2*z_d^2/z_d);

f3 = (z_d - z_a)*(z_k*(z_c - z_a)*(z_d - z_b)+z_b^2*z_c^2/z_k);
f3a = (z_d - z_a)*(z_a*(z_c - z_a)*(z_d - z_b)+z_b^2*z_c^2/z_a);
f3b = (z_d - z_a)*(z_b*(z_c - z_a)*(z_d - z_b)+z_b^2*z_c^2/z_b);
f3c = (z_d - z_a)*(z_c*(z_c - z_a)*(z_d - z_b)+z_b^2*z_c^2/z_c);
f3d = (z_d - z_a)*(z_d*(z_c - z_a)*(z_d - z_b)+z_b^2*z_c^2/z_d);

f4 = (z_c - z_b)*(z_k*(z_c - z_a)*(z_d - z_b) + z_a^2*z_d^2/z_k);
f4a = (z_c - z_b)*(z_a*(z_c - z_a)*(z_d - z_b) + z_a^2*z_d^2/z_a);
f4b = (z_c - z_b)*(z_b*(z_c - z_a)*(z_d - z_b) + z_a^2*z_d^2/z_b);
f4c = (z_c - z_b)*(z_c*(z_c - z_a)*(z_d - z_b) + z_a^2*z_d^2/z_c);
f4d = (z_c - z_b)*(z_d*(z_c - z_a)*(z_d - z_b) + z_a^2*z_d^2/z_d);

f5 = - z_a^2*z_b^2*(z_c -  z_d)/z_k;
f5a = - z_a^2*z_b^2*(z_c -  z_d)/z_a;
f5b = - z_a^2*z_b^2*(z_c -  z_d)/z_b;
f5c = - z_a^2*z_b^2*(z_c -  z_d)/z_c;
f5d = - z_a^2*z_b^2*(z_c -  z_d)/z_d;

f6 =  -z_c^2*z_d^2*(z_a  - z_b)/z_k;
f6a = -z_c^2*z_d^2*(z_a  - z_b)/z_a;
f6b = -z_c^2*z_d^2*(z_a  - z_b)/z_b;
f6c = -z_c^2*z_d^2*(z_a  - z_b)/z_c;
f6d = -z_c^2*z_d^2*(z_a  - z_b)/z_d;

% ---- Sufficient criteria: Define terms to regroup and simplify ----------
term_adj_abcd_sufficient = ...
     (A_ca - A_aa)*f1a + (A_cb - A_ab)*f1b + (A_cc - A_ac)*f1c + (A_cd - A_ad)*f1d ...
    +(A_da - A_ba)*f2a + (A_db - A_bb)*f2b + (A_dc - A_bc)*f2c + (A_dd - A_bd)*f2d ...
    +(A_ba - A_ca)*f3a + (A_bb - A_cb)*f3b + (A_bc - A_cc)*f3c + (A_bd - A_cd)*f3d ...
    +(A_aa - A_da)*f4a + (A_ab - A_db)*f4b + (A_ac - A_dc)*f4c + (A_ad - A_dd)*f4d ...
    +(A_aa - A_ba)*f5a + (A_ab - A_bb)*f5b + (A_ac - A_bc)*f5c + (A_ad - A_bd)*f5d ...
    +(A_ca - A_da)*f6a + (A_cb - A_db)*f6b + (A_cc - A_dc)*f6c + (A_cd - A_dd)*f6d;

%%% We apply the criteria A_{ba} = A_{ca} = A_{da}
  %                       A_{ab} = A_{cb} = A_{db}
  %                       A_{ac} = A_{bc} = A_{dc}
  %                       A_{ad} = A_{bd} = A_{cd}
term_adj_abcd_sufficient_simplified = ...
      (A_ca - A_aa)*f1a + (A_cc - A_ac)*f1c ...
    + (A_db - A_bb)*f2b + (A_dd - A_bd)*f2d ...
    + (A_bb - A_cb)*f3b + (A_bc - A_cc)*f3c ...
    + (A_aa - A_da)*f4a + (A_ad - A_dd)*f4d ...
    + (A_aa - A_ba)*f5a + (A_ab - A_bb)*f5b ...
    + (A_cc - A_dc)*f6c + (A_cd - A_dd)*f6d;

% Treatment:
%%% 1 - collect(expand(term_adj_abcd_sufficient_simplified), [z_a, z_b, z_c, z_d])
term_adj_abcd_sufficient_collect = ...
    (A_cb - A_db + A_da - A_ca)*z_a^2*z_b^2 ...
    + (A_ac - A_bc + A_ca - A_da + A_db - A_ab)*z_a^2*z_b*z_c ...
    + (A_ab - A_cb + A_bd - A_ad + A_ca - A_da)*z_a^2*z_b*z_d ...
    + (A_ad - A_bd + A_bc - A_ac + A_da - A_ca)*z_a^2*z_c*z_d ...
    + (A_ac - A_bc + A_ba - A_da + A_db - A_cb)*z_a*z_b^2*z_c ...
    + (A_bd - A_ad + A_ca - A_ba + A_db - A_cb)*z_a*z_b^2*z_d ...
    + (A_bc - A_ac + A_cb - A_db + A_da - A_ca)*z_a*z_b*z_c^2 ...
    + (A_ad - A_bd + A_bc - A_ac + A_cb - A_db + A_da - A_ca)*z_a*z_b*z_c*z_d ...
    + (A_ad - A_bd + A_cb - A_db + A_da - A_ca)*z_a*z_b*z_d^2 ...
    + (A_ac - A_bc + A_bd - A_cd + A_ca - A_da)*z_a*z_c^2*z_d ...
    + (A_bd - A_ad + A_ca - A_da + A_dc - A_bc)*z_a*z_c*z_d^2 ...
    + (A_ad - A_bd + A_bc - A_ac + A_cb - A_db)*z_b^2*z_c*z_d ...
    + (A_ac - A_bc + A_cd - A_ad + A_db - A_cb)*z_b*z_c^2*z_d ...
    + (A_ac - A_dc + A_bd - A_ad + A_db - A_cb)*z_b*z_c*z_d^2 ...
    + (A_ad - A_bd + A_bc - A_ac)*z_c^2*z_d^2;
 

% ---- Necessary criteria: Define terms to regroup and simplify -----------

terms_k = (A_ck - A_ak)*f1 + (A_dk - A_bk)*f2 + (A_bk - A_ck)*f3 ...
        + (A_ak - A_dk)*f4 + (A_ak - A_bk)*f5 + (A_ck - A_dk)*f6;

term_frequency = ...
  1i*((wc - wb)*z_a^2*z_b*z_c + (wb - wd)*z_a^2*z_b*z_d ...
    + (wd - wc)*z_a^2*z_c*z_d + (wa - wc)*z_a*z_b^2*z_c ...
    + (wd - wa)*z_a*z_b^2*z_d + (wb - wa)*z_a*z_b*z_c^2 ...
    + (wa - wb)*z_a*z_b*z_d^2 + (wa - wd)*z_a*z_c^2*z_d ...
    + (wc - wa)*z_a*z_c*z_d^2 + (wc - wd)*z_b^2*z_c*z_d ...
    + (wd - wb)*z_b*z_c^2*z_d + (wb - wc)*z_b*z_c*z_d^2);

term_adjacency_abcd = ...
    (A_ca - A_aa)*f1a + (A_cb - A_ab)*f1b + (A_cc - A_ac)*f1c + (A_cd - A_ad)*f1d ...
    +(A_da - A_ba)*f2a + (A_db - A_bb)*f2b + (A_dc - A_bc)*f2c + (A_dd - A_bd)*f2d ...
    +(A_ba - A_ca)*f3a + (A_bb - A_cb)*f3b + (A_bc - A_cc)*f3c + (A_bd - A_cd)*f3d ...
    +(A_aa - A_da)*f4a + (A_ab - A_db)*f4b + (A_ac - A_dc)*f4c + (A_ad - A_dd)*f4d ...
    +(A_aa - A_ba)*f5a + (A_ab - A_bb)*f5b + (A_ac - A_bc)*f5c + (A_ad - A_bd)*f5d ...
    +(A_ca - A_da)*f6a + (A_cb - A_db)*f6b + (A_cc - A_dc)*f6c + (A_cd - A_dd)*f6d;

terms_abcd = term_frequency + term_adjacency_abcd;

% Treatment:
%%% 1 - collect(expand(terms_k), [z_a, z_b, z_c, z_d, z_k])
terms_k_collect = ...
 ((A_bk - A_ak)*z_a^2*z_b^2*z_c + (A_ak - A_bk)*z_a^2*z_b^2*z_d ...
+ (A_ak - A_ck)*z_a^2*z_b*z_c^2 + (A_dk - A_ak)*z_a^2*z_b*z_d^2 ...
+ (A_ck - A_dk)*z_a^2*z_b*z_k^2 + (A_ck - A_ak)*z_a^2*z_c^2*z_d ...
+ (A_ak - A_dk)*z_a^2*z_c*z_d^2 + (A_dk - A_bk)*z_a^2*z_c*z_k^2 ...
+ (A_bk - A_ck)*z_a^2*z_d*z_k^2 + (A_ck - A_bk)*z_a*z_b^2*z_c^2 ...
+ (A_bk - A_dk)*z_a*z_b^2*z_d^2 + (A_dk - A_ck)*z_a*z_b^2*z_k^2 ...
+ (A_dk - A_ck)*z_a*z_c^2*z_d^2 + (A_bk - A_dk)*z_a*z_c^2*z_k^2 ...
+ (A_ck - A_bk)*z_a*z_d^2*z_k^2 + (A_bk - A_ck)*z_b^2*z_c^2*z_d ...
+ (A_dk - A_bk)*z_b^2*z_c*z_d^2 + (A_ak - A_dk)*z_b^2*z_c*z_k^2 ...
+ (A_ck - A_ak)*z_b^2*z_d*z_k^2 + (A_ck - A_dk)*z_b*z_c^2*z_d^2 ...
+ (A_dk - A_ak)*z_b*z_c^2*z_k^2 + (A_ak - A_ck)*z_b*z_d^2*z_k^2 ...
+ (A_ak - A_bk)*z_c^2*z_d*z_k^2 + (A_bk - A_ak)*z_c*z_d^2*z_k^2)/z_k;

%%% 2 - collect(expand(terms_abcd), [z_a, z_b, z_c, z_d, z_k])
terms_abcd_collect = ((A_ca - A_da)*z_a^4*z_b^2*z_c*z_d + (A_da - A_ba)*z_a^4*z_b*z_c^2*z_d + (A_ba - A_ca)*z_a^4*z_b*z_c*z_d^2 + (A_bd - A_ad)*z_a^3*z_b^3*z_c^2 + (A_ad - A_ac + A_bc - A_bd - A_ca + A_cb + A_da - A_db)*z_a^3*z_b^3*z_c*z_d + (A_ac - A_bc)*z_a^3*z_b^3*z_d^2 + (A_ad - A_cd)*z_a^3*z_b^2*z_c^3 + (A_ac - A_ab + A_db - A_dc - wb*1i + wc*1i)*z_a^3*z_b^2*z_c^2*z_d + (A_ab - A_ad - A_cb + A_cd + wb*1i - wd*1i)*z_a^3*z_b^2*z_c*z_d^2 + (A_dc - A_ac)*z_a^3*z_b^2*z_d^3 + (A_ab - A_ad + A_ba - A_bc - A_cb + A_cd - A_da + A_dc)*z_a^3*z_b*z_c^3*z_d + (A_ad - A_ac + A_bc - A_bd - wc*1i + wd*1i)*z_a^3*z_b*z_c^2*z_d^2 + (A_ac - A_ab - A_ba + A_bd + A_ca - A_cd + A_db - A_dc)*z_a^3*z_b*z_c*z_d^3 + (A_cb - A_ab)*z_a^3*z_c^3*z_d^2 + (A_ab - A_db)*z_a^3*z_c^2*z_d^3 + (A_db - A_cb)*z_a^2*z_b^4*z_c*z_d + (A_cd - A_bd)*z_a^2*z_b^3*z_c^3 + (A_ba - A_bc - A_da + A_dc + wa*1i - wc*1i)*z_a^2*z_b^3*z_c^2*z_d + (A_bd - A_ba + A_ca - A_cd - wa*1i + wd*1i)*z_a^2*z_b^3*z_c*z_d^2 + (A_bc - A_dc)*z_a^2*z_b^3*z_d^3 + (A_cb - A_ca + A_da - A_db - wa*1i + wb*1i)*z_a^2*z_b^2*z_c^3*z_d + (A_cb - A_ca + A_da - A_db + wa*1i - wb*1i)*z_a^2*z_b^2*z_c*z_d^3 + (A_bc - A_dc)*z_a^2*z_b*z_c^4*z_d + (A_bd - A_ba + A_ca - A_cd + wa*1i - wd*1i)*z_a^2*z_b*z_c^3*z_d^2 + (A_ba - A_bc - A_da + A_dc - wa*1i + wc*1i)*z_a^2*z_b*z_c^2*z_d^3 + (A_cd - A_bd)*z_a^2*z_b*z_c*z_d^4 + (A_db - A_cb)*z_a^2*z_c^3*z_d^3 + (A_ab - A_db)*z_a*z_b^4*z_c^2*z_d + (A_cb - A_ab)*z_a*z_b^4*z_c*z_d^2 + (A_ac - A_ab - A_ba + A_bd + A_ca - A_cd + A_db - A_dc)*z_a*z_b^3*z_c^3*z_d + (A_ad - A_ac + A_bc - A_bd + wc*1i - wd*1i)*z_a*z_b^3*z_c^2*z_d^2 + (A_ab - A_ad + A_ba - A_bc - A_cb + A_cd - A_da + A_dc)*z_a*z_b^3*z_c*z_d^3 + (A_dc - A_ac)*z_a*z_b^2*z_c^4*z_d + (A_ab - A_ad - A_cb + A_cd - wb*1i + wd*1i)*z_a*z_b^2*z_c^3*z_d^2 + (A_ac - A_ab + A_db - A_dc + wb*1i - wc*1i)*z_a*z_b^2*z_c^2*z_d^3 + (A_ad - A_cd)*z_a*z_b^2*z_c*z_d^4 + (A_ac - A_bc)*z_a*z_b*z_c^4*z_d^2 + (A_ad - A_ac + A_bc - A_bd - A_ca + A_cb + A_da - A_db)*z_a*z_b*z_c^3*z_d^3 + (A_bd - A_ad)*z_a*z_b*z_c^2*z_d^4 + (A_ba - A_ca)*z_b^3*z_c^3*z_d^2 + (A_da - A_ba)*z_b^3*z_c^2*z_d^3 + (A_ca - A_da)*z_b^2*z_c^3*z_d^3)/(z_a*z_b*z_c*z_d);
 
